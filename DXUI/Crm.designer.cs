#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DXUI
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CRMDATA")]
	public partial class CrmDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCiudad(Ciudad instance);
    partial void UpdateCiudad(Ciudad instance);
    partial void DeleteCiudad(Ciudad instance);
    partial void InsertClaim(Claim instance);
    partial void UpdateClaim(Claim instance);
    partial void DeleteClaim(Claim instance);
    partial void InsertCliente(Cliente instance);
    partial void UpdateCliente(Cliente instance);
    partial void DeleteCliente(Cliente instance);
    partial void InsertContacto(Contacto instance);
    partial void UpdateContacto(Contacto instance);
    partial void DeleteContacto(Contacto instance);
    partial void InsertEtapa(Etapa instance);
    partial void UpdateEtapa(Etapa instance);
    partial void DeleteEtapa(Etapa instance);
    partial void InsertExternalLogin(ExternalLogin instance);
    partial void UpdateExternalLogin(ExternalLogin instance);
    partial void DeleteExternalLogin(ExternalLogin instance);
    partial void InsertGerencia(Gerencia instance);
    partial void UpdateGerencia(Gerencia instance);
    partial void DeleteGerencia(Gerencia instance);
    partial void InsertLineaNegocio(LineaNegocio instance);
    partial void UpdateLineaNegocio(LineaNegocio instance);
    partial void DeleteLineaNegocio(LineaNegocio instance);
    partial void InsertOportunidad(Oportunidad instance);
    partial void UpdateOportunidad(Oportunidad instance);
    partial void DeleteOportunidad(Oportunidad instance);
    partial void InsertPerfil(Perfil instance);
    partial void UpdatePerfil(Perfil instance);
    partial void DeletePerfil(Perfil instance);
    partial void InsertProducto(Producto instance);
    partial void UpdateProducto(Producto instance);
    partial void DeleteProducto(Producto instance);
    partial void InsertProvincia(Provincia instance);
    partial void UpdateProvincia(Provincia instance);
    partial void DeleteProvincia(Provincia instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertRoleUser(RoleUser instance);
    partial void UpdateRoleUser(RoleUser instance);
    partial void DeleteRoleUser(RoleUser instance);
    partial void InsertSendero(Sendero instance);
    partial void UpdateSendero(Sendero instance);
    partial void DeleteSendero(Sendero instance);
    partial void InsertSenderoProducto(SenderoProducto instance);
    partial void UpdateSenderoProducto(SenderoProducto instance);
    partial void DeleteSenderoProducto(SenderoProducto instance);
    partial void InsertTarea(Tarea instance);
    partial void UpdateTarea(Tarea instance);
    partial void DeleteTarea(Tarea instance);
    partial void InsertTareaHistorial(TareaHistorial instance);
    partial void UpdateTareaHistorial(TareaHistorial instance);
    partial void DeleteTareaHistorial(TareaHistorial instance);
    partial void InsertTipoGestion(TipoGestion instance);
    partial void UpdateTipoGestion(TipoGestion instance);
    partial void DeleteTipoGestion(TipoGestion instance);
    partial void InsertTomaDescicion(TomaDescicion instance);
    partial void UpdateTomaDescicion(TomaDescicion instance);
    partial void DeleteTomaDescicion(TomaDescicion instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertVendedor(Vendedor instance);
    partial void UpdateVendedor(Vendedor instance);
    partial void DeleteVendedor(Vendedor instance);
    #endregion
		
		public CrmDataContext() : 
				base(global::DXUI.Properties.Settings.Default.CRMDATAConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CrmDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CrmDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CrmDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CrmDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Ciudad> Ciudads
		{
			get
			{
				return this.GetTable<Ciudad>();
			}
		}
		
		public System.Data.Linq.Table<Claim> Claims
		{
			get
			{
				return this.GetTable<Claim>();
			}
		}
		
		public System.Data.Linq.Table<Cliente> Clientes
		{
			get
			{
				return this.GetTable<Cliente>();
			}
		}
		
		public System.Data.Linq.Table<Contacto> Contactos
		{
			get
			{
				return this.GetTable<Contacto>();
			}
		}
		
		public System.Data.Linq.Table<Etapa> Etapas
		{
			get
			{
				return this.GetTable<Etapa>();
			}
		}
		
		public System.Data.Linq.Table<ExternalLogin> ExternalLogins
		{
			get
			{
				return this.GetTable<ExternalLogin>();
			}
		}
		
		public System.Data.Linq.Table<Gerencia> Gerencias
		{
			get
			{
				return this.GetTable<Gerencia>();
			}
		}
		
		public System.Data.Linq.Table<LineaNegocio> LineaNegocios
		{
			get
			{
				return this.GetTable<LineaNegocio>();
			}
		}
		
		public System.Data.Linq.Table<Oportunidad> Oportunidads
		{
			get
			{
				return this.GetTable<Oportunidad>();
			}
		}
		
		public System.Data.Linq.Table<Perfil> Perfils
		{
			get
			{
				return this.GetTable<Perfil>();
			}
		}
		
		public System.Data.Linq.Table<Producto> Productos
		{
			get
			{
				return this.GetTable<Producto>();
			}
		}
		
		public System.Data.Linq.Table<Provincia> Provincias
		{
			get
			{
				return this.GetTable<Provincia>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<RoleUser> RoleUsers
		{
			get
			{
				return this.GetTable<RoleUser>();
			}
		}
		
		public System.Data.Linq.Table<Sendero> Senderos
		{
			get
			{
				return this.GetTable<Sendero>();
			}
		}
		
		public System.Data.Linq.Table<SenderoProducto> SenderoProductos
		{
			get
			{
				return this.GetTable<SenderoProducto>();
			}
		}
		
		public System.Data.Linq.Table<Tarea> Tareas
		{
			get
			{
				return this.GetTable<Tarea>();
			}
		}
		
		public System.Data.Linq.Table<TareaHistorial> TareaHistorials
		{
			get
			{
				return this.GetTable<TareaHistorial>();
			}
		}
		
		public System.Data.Linq.Table<TipoGestion> TipoGestions
		{
			get
			{
				return this.GetTable<TipoGestion>();
			}
		}
		
		public System.Data.Linq.Table<TomaDescicion> TomaDescicions
		{
			get
			{
				return this.GetTable<TomaDescicion>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Vendedor> Vendedors
		{
			get
			{
				return this.GetTable<Vendedor>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ciudad")]
	public partial class Ciudad : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CiudadId;
		
		private int _ProvinciaId;
		
		private string _Nombre;
		
		private EntitySet<Cliente> _Clientes;
		
		private EntityRef<Provincia> _Provincia;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCiudadIdChanging(int value);
    partial void OnCiudadIdChanged();
    partial void OnProvinciaIdChanging(int value);
    partial void OnProvinciaIdChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public Ciudad()
		{
			this._Clientes = new EntitySet<Cliente>(new Action<Cliente>(this.attach_Clientes), new Action<Cliente>(this.detach_Clientes));
			this._Provincia = default(EntityRef<Provincia>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CiudadId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CiudadId
		{
			get
			{
				return this._CiudadId;
			}
			set
			{
				if ((this._CiudadId != value))
				{
					this.OnCiudadIdChanging(value);
					this.SendPropertyChanging();
					this._CiudadId = value;
					this.SendPropertyChanged("CiudadId");
					this.OnCiudadIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProvinciaId", DbType="Int NOT NULL")]
		public int ProvinciaId
		{
			get
			{
				return this._ProvinciaId;
			}
			set
			{
				if ((this._ProvinciaId != value))
				{
					if (this._Provincia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProvinciaIdChanging(value);
					this.SendPropertyChanging();
					this._ProvinciaId = value;
					this.SendPropertyChanged("ProvinciaId");
					this.OnProvinciaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ciudad_Cliente", Storage="_Clientes", ThisKey="CiudadId", OtherKey="CiudadId")]
		public EntitySet<Cliente> Clientes
		{
			get
			{
				return this._Clientes;
			}
			set
			{
				this._Clientes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Provincia_Ciudad", Storage="_Provincia", ThisKey="ProvinciaId", OtherKey="ProvinciaId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Provincia Provincia
		{
			get
			{
				return this._Provincia.Entity;
			}
			set
			{
				Provincia previousValue = this._Provincia.Entity;
				if (((previousValue != value) 
							|| (this._Provincia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Provincia.Entity = null;
						previousValue.Ciudads.Remove(this);
					}
					this._Provincia.Entity = value;
					if ((value != null))
					{
						value.Ciudads.Add(this);
						this._ProvinciaId = value.ProvinciaId;
					}
					else
					{
						this._ProvinciaId = default(int);
					}
					this.SendPropertyChanged("Provincia");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Clientes(Cliente entity)
		{
			this.SendPropertyChanging();
			entity.Ciudad = this;
		}
		
		private void detach_Clientes(Cliente entity)
		{
			this.SendPropertyChanging();
			entity.Ciudad = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Claim")]
	public partial class Claim : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ClaimId;
		
		private int _UserId;
		
		private string _ClaimType;
		
		private string _ClaimValue;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClaimIdChanging(int value);
    partial void OnClaimIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnClaimTypeChanging(string value);
    partial void OnClaimTypeChanged();
    partial void OnClaimValueChanging(string value);
    partial void OnClaimValueChanged();
    #endregion
		
		public Claim()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ClaimId
		{
			get
			{
				return this._ClaimId;
			}
			set
			{
				if ((this._ClaimId != value))
				{
					this.OnClaimIdChanging(value);
					this.SendPropertyChanging();
					this._ClaimId = value;
					this.SendPropertyChanged("ClaimId");
					this.OnClaimIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimType", DbType="NVarChar(MAX)")]
		public string ClaimType
		{
			get
			{
				return this._ClaimType;
			}
			set
			{
				if ((this._ClaimType != value))
				{
					this.OnClaimTypeChanging(value);
					this.SendPropertyChanging();
					this._ClaimType = value;
					this.SendPropertyChanged("ClaimType");
					this.OnClaimTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimValue", DbType="NVarChar(MAX)")]
		public string ClaimValue
		{
			get
			{
				return this._ClaimValue;
			}
			set
			{
				if ((this._ClaimValue != value))
				{
					this.OnClaimValueChanging(value);
					this.SendPropertyChanging();
					this._ClaimValue = value;
					this.SendPropertyChanged("ClaimValue");
					this.OnClaimValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Claim", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Claims.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Claims.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cliente")]
	public partial class Cliente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ClienteId;
		
		private string _Ruc;
		
		private string _Telefono;
		
		private string _Direccion;
		
		private string _Email;
		
		private string _Division;
		
		private System.DateTime _FechaNacimiento;
		
		private string _Nombre;
		
		private System.Nullable<int> _Vendedor_PerfilId;
		
		private string _Sector;
		
		private string _DescripcionSector;
		
		private string _TelefonoConvencional;
		
		private int _ProvinciaId;
		
		private int _CiudadId;
		
		private int _TiPoCliente;
		
		private int _UserId;
		
		private System.DateTime _UltimaGestion;
		
		private EntitySet<Contacto> _Contactos;
		
		private EntitySet<Oportunidad> _Oportunidads;
		
		private EntityRef<Sendero> _Sendero;
		
		private EntitySet<Tarea> _Tareas;
		
		private EntityRef<TomaDescicion> _TomaDescicion;
		
		private EntityRef<Ciudad> _Ciudad;
		
		private EntityRef<Provincia> _Provincia;
		
		private EntityRef<User> _User;
		
		private EntityRef<Vendedor> _Vendedor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClienteIdChanging(int value);
    partial void OnClienteIdChanged();
    partial void OnRucChanging(string value);
    partial void OnRucChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void OnDireccionChanging(string value);
    partial void OnDireccionChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDivisionChanging(string value);
    partial void OnDivisionChanged();
    partial void OnFechaNacimientoChanging(System.DateTime value);
    partial void OnFechaNacimientoChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnVendedor_PerfilIdChanging(System.Nullable<int> value);
    partial void OnVendedor_PerfilIdChanged();
    partial void OnSectorChanging(string value);
    partial void OnSectorChanged();
    partial void OnDescripcionSectorChanging(string value);
    partial void OnDescripcionSectorChanged();
    partial void OnTelefonoConvencionalChanging(string value);
    partial void OnTelefonoConvencionalChanged();
    partial void OnProvinciaIdChanging(int value);
    partial void OnProvinciaIdChanged();
    partial void OnCiudadIdChanging(int value);
    partial void OnCiudadIdChanged();
    partial void OnTiPoClienteChanging(int value);
    partial void OnTiPoClienteChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnUltimaGestionChanging(System.DateTime value);
    partial void OnUltimaGestionChanged();
    #endregion
		
		public Cliente()
		{
			this._Contactos = new EntitySet<Contacto>(new Action<Contacto>(this.attach_Contactos), new Action<Contacto>(this.detach_Contactos));
			this._Oportunidads = new EntitySet<Oportunidad>(new Action<Oportunidad>(this.attach_Oportunidads), new Action<Oportunidad>(this.detach_Oportunidads));
			this._Sendero = default(EntityRef<Sendero>);
			this._Tareas = new EntitySet<Tarea>(new Action<Tarea>(this.attach_Tareas), new Action<Tarea>(this.detach_Tareas));
			this._TomaDescicion = default(EntityRef<TomaDescicion>);
			this._Ciudad = default(EntityRef<Ciudad>);
			this._Provincia = default(EntityRef<Provincia>);
			this._User = default(EntityRef<User>);
			this._Vendedor = default(EntityRef<Vendedor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClienteId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ClienteId
		{
			get
			{
				return this._ClienteId;
			}
			set
			{
				if ((this._ClienteId != value))
				{
					this.OnClienteIdChanging(value);
					this.SendPropertyChanging();
					this._ClienteId = value;
					this.SendPropertyChanged("ClienteId");
					this.OnClienteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ruc", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string Ruc
		{
			get
			{
				return this._Ruc;
			}
			set
			{
				if ((this._Ruc != value))
				{
					this.OnRucChanging(value);
					this.SendPropertyChanging();
					this._Ruc = value;
					this.SendPropertyChanged("Ruc");
					this.OnRucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direccion", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				if ((this._Direccion != value))
				{
					this.OnDireccionChanging(value);
					this.SendPropertyChanging();
					this._Direccion = value;
					this.SendPropertyChanged("Direccion");
					this.OnDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Division", DbType="NVarChar(50)")]
		public string Division
		{
			get
			{
				return this._Division;
			}
			set
			{
				if ((this._Division != value))
				{
					this.OnDivisionChanging(value);
					this.SendPropertyChanging();
					this._Division = value;
					this.SendPropertyChanged("Division");
					this.OnDivisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaNacimiento", DbType="Date NOT NULL")]
		public System.DateTime FechaNacimiento
		{
			get
			{
				return this._FechaNacimiento;
			}
			set
			{
				if ((this._FechaNacimiento != value))
				{
					this.OnFechaNacimientoChanging(value);
					this.SendPropertyChanging();
					this._FechaNacimiento = value;
					this.SendPropertyChanged("FechaNacimiento");
					this.OnFechaNacimientoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vendedor_PerfilId", DbType="Int")]
		public System.Nullable<int> Vendedor_PerfilId
		{
			get
			{
				return this._Vendedor_PerfilId;
			}
			set
			{
				if ((this._Vendedor_PerfilId != value))
				{
					if (this._Vendedor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVendedor_PerfilIdChanging(value);
					this.SendPropertyChanging();
					this._Vendedor_PerfilId = value;
					this.SendPropertyChanged("Vendedor_PerfilId");
					this.OnVendedor_PerfilIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sector", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string Sector
		{
			get
			{
				return this._Sector;
			}
			set
			{
				if ((this._Sector != value))
				{
					this.OnSectorChanging(value);
					this.SendPropertyChanging();
					this._Sector = value;
					this.SendPropertyChanged("Sector");
					this.OnSectorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescripcionSector", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string DescripcionSector
		{
			get
			{
				return this._DescripcionSector;
			}
			set
			{
				if ((this._DescripcionSector != value))
				{
					this.OnDescripcionSectorChanging(value);
					this.SendPropertyChanging();
					this._DescripcionSector = value;
					this.SendPropertyChanged("DescripcionSector");
					this.OnDescripcionSectorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelefonoConvencional", DbType="NVarChar(10)")]
		public string TelefonoConvencional
		{
			get
			{
				return this._TelefonoConvencional;
			}
			set
			{
				if ((this._TelefonoConvencional != value))
				{
					this.OnTelefonoConvencionalChanging(value);
					this.SendPropertyChanging();
					this._TelefonoConvencional = value;
					this.SendPropertyChanged("TelefonoConvencional");
					this.OnTelefonoConvencionalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProvinciaId", DbType="Int NOT NULL")]
		public int ProvinciaId
		{
			get
			{
				return this._ProvinciaId;
			}
			set
			{
				if ((this._ProvinciaId != value))
				{
					if (this._Provincia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProvinciaIdChanging(value);
					this.SendPropertyChanging();
					this._ProvinciaId = value;
					this.SendPropertyChanged("ProvinciaId");
					this.OnProvinciaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CiudadId", DbType="Int NOT NULL")]
		public int CiudadId
		{
			get
			{
				return this._CiudadId;
			}
			set
			{
				if ((this._CiudadId != value))
				{
					if (this._Ciudad.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCiudadIdChanging(value);
					this.SendPropertyChanging();
					this._CiudadId = value;
					this.SendPropertyChanged("CiudadId");
					this.OnCiudadIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TiPoCliente", DbType="Int NOT NULL")]
		public int TiPoCliente
		{
			get
			{
				return this._TiPoCliente;
			}
			set
			{
				if ((this._TiPoCliente != value))
				{
					this.OnTiPoClienteChanging(value);
					this.SendPropertyChanging();
					this._TiPoCliente = value;
					this.SendPropertyChanged("TiPoCliente");
					this.OnTiPoClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UltimaGestion", DbType="Date NOT NULL")]
		public System.DateTime UltimaGestion
		{
			get
			{
				return this._UltimaGestion;
			}
			set
			{
				if ((this._UltimaGestion != value))
				{
					this.OnUltimaGestionChanging(value);
					this.SendPropertyChanging();
					this._UltimaGestion = value;
					this.SendPropertyChanged("UltimaGestion");
					this.OnUltimaGestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Contacto", Storage="_Contactos", ThisKey="ClienteId", OtherKey="ClienteId")]
		public EntitySet<Contacto> Contactos
		{
			get
			{
				return this._Contactos;
			}
			set
			{
				this._Contactos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Oportunidad", Storage="_Oportunidads", ThisKey="ClienteId", OtherKey="ClienteId")]
		public EntitySet<Oportunidad> Oportunidads
		{
			get
			{
				return this._Oportunidads;
			}
			set
			{
				this._Oportunidads.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Sendero", Storage="_Sendero", ThisKey="ClienteId", OtherKey="SenderoId", IsUnique=true, IsForeignKey=false)]
		public Sendero Sendero
		{
			get
			{
				return this._Sendero.Entity;
			}
			set
			{
				Sendero previousValue = this._Sendero.Entity;
				if (((previousValue != value) 
							|| (this._Sendero.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sendero.Entity = null;
						previousValue.Cliente = null;
					}
					this._Sendero.Entity = value;
					if ((value != null))
					{
						value.Cliente = this;
					}
					this.SendPropertyChanged("Sendero");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Tarea", Storage="_Tareas", ThisKey="ClienteId", OtherKey="ClienteId")]
		public EntitySet<Tarea> Tareas
		{
			get
			{
				return this._Tareas;
			}
			set
			{
				this._Tareas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_TomaDescicion", Storage="_TomaDescicion", ThisKey="ClienteId", OtherKey="TomaDescicionId", IsUnique=true, IsForeignKey=false)]
		public TomaDescicion TomaDescicion
		{
			get
			{
				return this._TomaDescicion.Entity;
			}
			set
			{
				TomaDescicion previousValue = this._TomaDescicion.Entity;
				if (((previousValue != value) 
							|| (this._TomaDescicion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TomaDescicion.Entity = null;
						previousValue.Cliente = null;
					}
					this._TomaDescicion.Entity = value;
					if ((value != null))
					{
						value.Cliente = this;
					}
					this.SendPropertyChanged("TomaDescicion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ciudad_Cliente", Storage="_Ciudad", ThisKey="CiudadId", OtherKey="CiudadId", IsForeignKey=true)]
		public Ciudad Ciudad
		{
			get
			{
				return this._Ciudad.Entity;
			}
			set
			{
				Ciudad previousValue = this._Ciudad.Entity;
				if (((previousValue != value) 
							|| (this._Ciudad.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ciudad.Entity = null;
						previousValue.Clientes.Remove(this);
					}
					this._Ciudad.Entity = value;
					if ((value != null))
					{
						value.Clientes.Add(this);
						this._CiudadId = value.CiudadId;
					}
					else
					{
						this._CiudadId = default(int);
					}
					this.SendPropertyChanged("Ciudad");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Provincia_Cliente", Storage="_Provincia", ThisKey="ProvinciaId", OtherKey="ProvinciaId", IsForeignKey=true)]
		public Provincia Provincia
		{
			get
			{
				return this._Provincia.Entity;
			}
			set
			{
				Provincia previousValue = this._Provincia.Entity;
				if (((previousValue != value) 
							|| (this._Provincia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Provincia.Entity = null;
						previousValue.Clientes.Remove(this);
					}
					this._Provincia.Entity = value;
					if ((value != null))
					{
						value.Clientes.Add(this);
						this._ProvinciaId = value.ProvinciaId;
					}
					else
					{
						this._ProvinciaId = default(int);
					}
					this.SendPropertyChanged("Provincia");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Cliente", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Clientes.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Clientes.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vendedor_Cliente", Storage="_Vendedor", ThisKey="Vendedor_PerfilId", OtherKey="PerfilId", IsForeignKey=true)]
		public Vendedor Vendedor
		{
			get
			{
				return this._Vendedor.Entity;
			}
			set
			{
				Vendedor previousValue = this._Vendedor.Entity;
				if (((previousValue != value) 
							|| (this._Vendedor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vendedor.Entity = null;
						previousValue.Clientes.Remove(this);
					}
					this._Vendedor.Entity = value;
					if ((value != null))
					{
						value.Clientes.Add(this);
						this._Vendedor_PerfilId = value.PerfilId;
					}
					else
					{
						this._Vendedor_PerfilId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Vendedor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Contactos(Contacto entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = this;
		}
		
		private void detach_Contactos(Contacto entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = null;
		}
		
		private void attach_Oportunidads(Oportunidad entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = this;
		}
		
		private void detach_Oportunidads(Oportunidad entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = null;
		}
		
		private void attach_Tareas(Tarea entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = this;
		}
		
		private void detach_Tareas(Tarea entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contacto")]
	public partial class Contacto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ContactoId;
		
		private int _ClienteId;
		
		private string _Nombre;
		
		private string _Cargo;
		
		private string _Celular;
		
		private System.DateTime _Date;
		
		private string _Email;
		
		private EntitySet<Oportunidad> _Oportunidads;
		
		private EntityRef<Cliente> _Cliente;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContactoIdChanging(int value);
    partial void OnContactoIdChanged();
    partial void OnClienteIdChanging(int value);
    partial void OnClienteIdChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnCargoChanging(string value);
    partial void OnCargoChanged();
    partial void OnCelularChanging(string value);
    partial void OnCelularChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public Contacto()
		{
			this._Oportunidads = new EntitySet<Oportunidad>(new Action<Oportunidad>(this.attach_Oportunidads), new Action<Oportunidad>(this.detach_Oportunidads));
			this._Cliente = default(EntityRef<Cliente>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactoId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ContactoId
		{
			get
			{
				return this._ContactoId;
			}
			set
			{
				if ((this._ContactoId != value))
				{
					this.OnContactoIdChanging(value);
					this.SendPropertyChanging();
					this._ContactoId = value;
					this.SendPropertyChanged("ContactoId");
					this.OnContactoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClienteId", DbType="Int NOT NULL")]
		public int ClienteId
		{
			get
			{
				return this._ClienteId;
			}
			set
			{
				if ((this._ClienteId != value))
				{
					if (this._Cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClienteIdChanging(value);
					this.SendPropertyChanging();
					this._ClienteId = value;
					this.SendPropertyChanged("ClienteId");
					this.OnClienteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cargo", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Cargo
		{
			get
			{
				return this._Cargo;
			}
			set
			{
				if ((this._Cargo != value))
				{
					this.OnCargoChanging(value);
					this.SendPropertyChanging();
					this._Cargo = value;
					this.SendPropertyChanged("Cargo");
					this.OnCargoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Celular", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Celular
		{
			get
			{
				return this._Celular;
			}
			set
			{
				if ((this._Celular != value))
				{
					this.OnCelularChanging(value);
					this.SendPropertyChanging();
					this._Celular = value;
					this.SendPropertyChanged("Celular");
					this.OnCelularChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contacto_Oportunidad", Storage="_Oportunidads", ThisKey="ContactoId", OtherKey="ContactoVentaId")]
		public EntitySet<Oportunidad> Oportunidads
		{
			get
			{
				return this._Oportunidads;
			}
			set
			{
				this._Oportunidads.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Contacto", Storage="_Cliente", ThisKey="ClienteId", OtherKey="ClienteId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Cliente Cliente
		{
			get
			{
				return this._Cliente.Entity;
			}
			set
			{
				Cliente previousValue = this._Cliente.Entity;
				if (((previousValue != value) 
							|| (this._Cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cliente.Entity = null;
						previousValue.Contactos.Remove(this);
					}
					this._Cliente.Entity = value;
					if ((value != null))
					{
						value.Contactos.Add(this);
						this._ClienteId = value.ClienteId;
					}
					else
					{
						this._ClienteId = default(int);
					}
					this.SendPropertyChanged("Cliente");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Oportunidads(Oportunidad entity)
		{
			this.SendPropertyChanging();
			entity.Contacto = this;
		}
		
		private void detach_Oportunidads(Oportunidad entity)
		{
			this.SendPropertyChanging();
			entity.Contacto = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Etapa")]
	public partial class Etapa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EtapaId;
		
		private int _Porciento;
		
		private string _Descripcion;
		
		private EntitySet<Oportunidad> _Oportunidads;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEtapaIdChanging(int value);
    partial void OnEtapaIdChanged();
    partial void OnPorcientoChanging(int value);
    partial void OnPorcientoChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public Etapa()
		{
			this._Oportunidads = new EntitySet<Oportunidad>(new Action<Oportunidad>(this.attach_Oportunidads), new Action<Oportunidad>(this.detach_Oportunidads));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EtapaId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EtapaId
		{
			get
			{
				return this._EtapaId;
			}
			set
			{
				if ((this._EtapaId != value))
				{
					this.OnEtapaIdChanging(value);
					this.SendPropertyChanging();
					this._EtapaId = value;
					this.SendPropertyChanged("EtapaId");
					this.OnEtapaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Porciento", DbType="Int NOT NULL")]
		public int Porciento
		{
			get
			{
				return this._Porciento;
			}
			set
			{
				if ((this._Porciento != value))
				{
					this.OnPorcientoChanging(value);
					this.SendPropertyChanging();
					this._Porciento = value;
					this.SendPropertyChanged("Porciento");
					this.OnPorcientoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Etapa_Oportunidad", Storage="_Oportunidads", ThisKey="EtapaId", OtherKey="EtapaId")]
		public EntitySet<Oportunidad> Oportunidads
		{
			get
			{
				return this._Oportunidads;
			}
			set
			{
				this._Oportunidads.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Oportunidads(Oportunidad entity)
		{
			this.SendPropertyChanging();
			entity.Etapa = this;
		}
		
		private void detach_Oportunidads(Oportunidad entity)
		{
			this.SendPropertyChanging();
			entity.Etapa = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExternalLogin")]
	public partial class ExternalLogin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ExternalLoginId;
		
		private string _LoginProvider;
		
		private string _ProviderKey;
		
		private int _UserId;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExternalLoginIdChanging(int value);
    partial void OnExternalLoginIdChanged();
    partial void OnLoginProviderChanging(string value);
    partial void OnLoginProviderChanged();
    partial void OnProviderKeyChanging(string value);
    partial void OnProviderKeyChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    #endregion
		
		public ExternalLogin()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalLoginId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ExternalLoginId
		{
			get
			{
				return this._ExternalLoginId;
			}
			set
			{
				if ((this._ExternalLoginId != value))
				{
					this.OnExternalLoginIdChanging(value);
					this.SendPropertyChanging();
					this._ExternalLoginId = value;
					this.SendPropertyChanged("ExternalLoginId");
					this.OnExternalLoginIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginProvider", DbType="NVarChar(MAX)")]
		public string LoginProvider
		{
			get
			{
				return this._LoginProvider;
			}
			set
			{
				if ((this._LoginProvider != value))
				{
					this.OnLoginProviderChanging(value);
					this.SendPropertyChanging();
					this._LoginProvider = value;
					this.SendPropertyChanged("LoginProvider");
					this.OnLoginProviderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProviderKey", DbType="NVarChar(MAX)")]
		public string ProviderKey
		{
			get
			{
				return this._ProviderKey;
			}
			set
			{
				if ((this._ProviderKey != value))
				{
					this.OnProviderKeyChanging(value);
					this.SendPropertyChanging();
					this._ProviderKey = value;
					this.SendPropertyChanged("ProviderKey");
					this.OnProviderKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ExternalLogin", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ExternalLogins.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ExternalLogins.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Gerencia")]
	public partial class Gerencia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PerfilId;
		
		private int _Nuevo;
		
		private EntityRef<Perfil> _Perfil;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPerfilIdChanging(int value);
    partial void OnPerfilIdChanged();
    partial void OnNuevoChanging(int value);
    partial void OnNuevoChanged();
    #endregion
		
		public Gerencia()
		{
			this._Perfil = default(EntityRef<Perfil>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PerfilId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PerfilId
		{
			get
			{
				return this._PerfilId;
			}
			set
			{
				if ((this._PerfilId != value))
				{
					if (this._Perfil.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPerfilIdChanging(value);
					this.SendPropertyChanging();
					this._PerfilId = value;
					this.SendPropertyChanged("PerfilId");
					this.OnPerfilIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nuevo", DbType="Int NOT NULL")]
		public int Nuevo
		{
			get
			{
				return this._Nuevo;
			}
			set
			{
				if ((this._Nuevo != value))
				{
					this.OnNuevoChanging(value);
					this.SendPropertyChanging();
					this._Nuevo = value;
					this.SendPropertyChanged("Nuevo");
					this.OnNuevoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Perfil_Gerencia", Storage="_Perfil", ThisKey="PerfilId", OtherKey="PerfilId", IsForeignKey=true)]
		public Perfil Perfil
		{
			get
			{
				return this._Perfil.Entity;
			}
			set
			{
				Perfil previousValue = this._Perfil.Entity;
				if (((previousValue != value) 
							|| (this._Perfil.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Perfil.Entity = null;
						previousValue.Gerencia = null;
					}
					this._Perfil.Entity = value;
					if ((value != null))
					{
						value.Gerencia = this;
						this._PerfilId = value.PerfilId;
					}
					else
					{
						this._PerfilId = default(int);
					}
					this.SendPropertyChanged("Perfil");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LineaNegocio")]
	public partial class LineaNegocio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LineaNegocioId;
		
		private string _Descripcion;
		
		private EntitySet<Oportunidad> _Oportunidads;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLineaNegocioIdChanging(int value);
    partial void OnLineaNegocioIdChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public LineaNegocio()
		{
			this._Oportunidads = new EntitySet<Oportunidad>(new Action<Oportunidad>(this.attach_Oportunidads), new Action<Oportunidad>(this.detach_Oportunidads));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineaNegocioId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LineaNegocioId
		{
			get
			{
				return this._LineaNegocioId;
			}
			set
			{
				if ((this._LineaNegocioId != value))
				{
					this.OnLineaNegocioIdChanging(value);
					this.SendPropertyChanging();
					this._LineaNegocioId = value;
					this.SendPropertyChanged("LineaNegocioId");
					this.OnLineaNegocioIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LineaNegocio_Oportunidad", Storage="_Oportunidads", ThisKey="LineaNegocioId", OtherKey="LineaNegocioId")]
		public EntitySet<Oportunidad> Oportunidads
		{
			get
			{
				return this._Oportunidads;
			}
			set
			{
				this._Oportunidads.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Oportunidads(Oportunidad entity)
		{
			this.SendPropertyChanging();
			entity.LineaNegocio = this;
		}
		
		private void detach_Oportunidads(Oportunidad entity)
		{
			this.SendPropertyChanging();
			entity.LineaNegocio = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Oportunidad")]
	public partial class Oportunidad : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OportunidadId;
		
		private int _AsesorId;
		
		private System.DateTime _FechaInicio;
		
		private int _ClienteId;
		
		private int _TipoCartera;
		
		private int _LineaNegocioId;
		
		private int _ProductoId;
		
		private int _Cantidad;
		
		private decimal _PVU;
		
		private decimal _Potencial;
		
		private int _EtapaId;
		
		private decimal _ExpectativaVenta;
		
		private decimal _ExpectativaAsesor;
		
		private System.DateTime _FechaPrevistaCierre;
		
		private int _TipoGestionId;
		
		private int _ContactoVentaId;
		
		private string _Nombre;
		
		private EntityRef<Cliente> _Cliente;
		
		private EntityRef<Contacto> _Contacto;
		
		private EntityRef<Etapa> _Etapa;
		
		private EntityRef<LineaNegocio> _LineaNegocio;
		
		private EntityRef<Producto> _Producto;
		
		private EntityRef<TipoGestion> _TipoGestion;
		
		private EntityRef<Vendedor> _Vendedor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOportunidadIdChanging(int value);
    partial void OnOportunidadIdChanged();
    partial void OnAsesorIdChanging(int value);
    partial void OnAsesorIdChanged();
    partial void OnFechaInicioChanging(System.DateTime value);
    partial void OnFechaInicioChanged();
    partial void OnClienteIdChanging(int value);
    partial void OnClienteIdChanged();
    partial void OnTipoCarteraChanging(int value);
    partial void OnTipoCarteraChanged();
    partial void OnLineaNegocioIdChanging(int value);
    partial void OnLineaNegocioIdChanged();
    partial void OnProductoIdChanging(int value);
    partial void OnProductoIdChanged();
    partial void OnCantidadChanging(int value);
    partial void OnCantidadChanged();
    partial void OnPVUChanging(decimal value);
    partial void OnPVUChanged();
    partial void OnPotencialChanging(decimal value);
    partial void OnPotencialChanged();
    partial void OnEtapaIdChanging(int value);
    partial void OnEtapaIdChanged();
    partial void OnExpectativaVentaChanging(decimal value);
    partial void OnExpectativaVentaChanged();
    partial void OnExpectativaAsesorChanging(decimal value);
    partial void OnExpectativaAsesorChanged();
    partial void OnFechaPrevistaCierreChanging(System.DateTime value);
    partial void OnFechaPrevistaCierreChanged();
    partial void OnTipoGestionIdChanging(int value);
    partial void OnTipoGestionIdChanged();
    partial void OnContactoVentaIdChanging(int value);
    partial void OnContactoVentaIdChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public Oportunidad()
		{
			this._Cliente = default(EntityRef<Cliente>);
			this._Contacto = default(EntityRef<Contacto>);
			this._Etapa = default(EntityRef<Etapa>);
			this._LineaNegocio = default(EntityRef<LineaNegocio>);
			this._Producto = default(EntityRef<Producto>);
			this._TipoGestion = default(EntityRef<TipoGestion>);
			this._Vendedor = default(EntityRef<Vendedor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OportunidadId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OportunidadId
		{
			get
			{
				return this._OportunidadId;
			}
			set
			{
				if ((this._OportunidadId != value))
				{
					this.OnOportunidadIdChanging(value);
					this.SendPropertyChanging();
					this._OportunidadId = value;
					this.SendPropertyChanged("OportunidadId");
					this.OnOportunidadIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AsesorId", DbType="Int NOT NULL")]
		public int AsesorId
		{
			get
			{
				return this._AsesorId;
			}
			set
			{
				if ((this._AsesorId != value))
				{
					if (this._Vendedor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAsesorIdChanging(value);
					this.SendPropertyChanging();
					this._AsesorId = value;
					this.SendPropertyChanged("AsesorId");
					this.OnAsesorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaInicio", DbType="Date NOT NULL")]
		public System.DateTime FechaInicio
		{
			get
			{
				return this._FechaInicio;
			}
			set
			{
				if ((this._FechaInicio != value))
				{
					this.OnFechaInicioChanging(value);
					this.SendPropertyChanging();
					this._FechaInicio = value;
					this.SendPropertyChanged("FechaInicio");
					this.OnFechaInicioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClienteId", DbType="Int NOT NULL")]
		public int ClienteId
		{
			get
			{
				return this._ClienteId;
			}
			set
			{
				if ((this._ClienteId != value))
				{
					if (this._Cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClienteIdChanging(value);
					this.SendPropertyChanging();
					this._ClienteId = value;
					this.SendPropertyChanged("ClienteId");
					this.OnClienteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipoCartera", DbType="Int NOT NULL")]
		public int TipoCartera
		{
			get
			{
				return this._TipoCartera;
			}
			set
			{
				if ((this._TipoCartera != value))
				{
					this.OnTipoCarteraChanging(value);
					this.SendPropertyChanging();
					this._TipoCartera = value;
					this.SendPropertyChanged("TipoCartera");
					this.OnTipoCarteraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineaNegocioId", DbType="Int NOT NULL")]
		public int LineaNegocioId
		{
			get
			{
				return this._LineaNegocioId;
			}
			set
			{
				if ((this._LineaNegocioId != value))
				{
					if (this._LineaNegocio.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLineaNegocioIdChanging(value);
					this.SendPropertyChanging();
					this._LineaNegocioId = value;
					this.SendPropertyChanged("LineaNegocioId");
					this.OnLineaNegocioIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductoId", DbType="Int NOT NULL")]
		public int ProductoId
		{
			get
			{
				return this._ProductoId;
			}
			set
			{
				if ((this._ProductoId != value))
				{
					if (this._Producto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductoIdChanging(value);
					this.SendPropertyChanging();
					this._ProductoId = value;
					this.SendPropertyChanged("ProductoId");
					this.OnProductoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cantidad", DbType="Int NOT NULL")]
		public int Cantidad
		{
			get
			{
				return this._Cantidad;
			}
			set
			{
				if ((this._Cantidad != value))
				{
					this.OnCantidadChanging(value);
					this.SendPropertyChanging();
					this._Cantidad = value;
					this.SendPropertyChanged("Cantidad");
					this.OnCantidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PVU", DbType="Money NOT NULL")]
		public decimal PVU
		{
			get
			{
				return this._PVU;
			}
			set
			{
				if ((this._PVU != value))
				{
					this.OnPVUChanging(value);
					this.SendPropertyChanging();
					this._PVU = value;
					this.SendPropertyChanged("PVU");
					this.OnPVUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Potencial", DbType="Money NOT NULL")]
		public decimal Potencial
		{
			get
			{
				return this._Potencial;
			}
			set
			{
				if ((this._Potencial != value))
				{
					this.OnPotencialChanging(value);
					this.SendPropertyChanging();
					this._Potencial = value;
					this.SendPropertyChanged("Potencial");
					this.OnPotencialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EtapaId", DbType="Int NOT NULL")]
		public int EtapaId
		{
			get
			{
				return this._EtapaId;
			}
			set
			{
				if ((this._EtapaId != value))
				{
					if (this._Etapa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEtapaIdChanging(value);
					this.SendPropertyChanging();
					this._EtapaId = value;
					this.SendPropertyChanged("EtapaId");
					this.OnEtapaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpectativaVenta", DbType="Money NOT NULL")]
		public decimal ExpectativaVenta
		{
			get
			{
				return this._ExpectativaVenta;
			}
			set
			{
				if ((this._ExpectativaVenta != value))
				{
					this.OnExpectativaVentaChanging(value);
					this.SendPropertyChanging();
					this._ExpectativaVenta = value;
					this.SendPropertyChanged("ExpectativaVenta");
					this.OnExpectativaVentaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpectativaAsesor", DbType="Money NOT NULL")]
		public decimal ExpectativaAsesor
		{
			get
			{
				return this._ExpectativaAsesor;
			}
			set
			{
				if ((this._ExpectativaAsesor != value))
				{
					this.OnExpectativaAsesorChanging(value);
					this.SendPropertyChanging();
					this._ExpectativaAsesor = value;
					this.SendPropertyChanged("ExpectativaAsesor");
					this.OnExpectativaAsesorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaPrevistaCierre", DbType="Date NOT NULL")]
		public System.DateTime FechaPrevistaCierre
		{
			get
			{
				return this._FechaPrevistaCierre;
			}
			set
			{
				if ((this._FechaPrevistaCierre != value))
				{
					this.OnFechaPrevistaCierreChanging(value);
					this.SendPropertyChanging();
					this._FechaPrevistaCierre = value;
					this.SendPropertyChanged("FechaPrevistaCierre");
					this.OnFechaPrevistaCierreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipoGestionId", DbType="Int NOT NULL")]
		public int TipoGestionId
		{
			get
			{
				return this._TipoGestionId;
			}
			set
			{
				if ((this._TipoGestionId != value))
				{
					if (this._TipoGestion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTipoGestionIdChanging(value);
					this.SendPropertyChanging();
					this._TipoGestionId = value;
					this.SendPropertyChanged("TipoGestionId");
					this.OnTipoGestionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactoVentaId", DbType="Int NOT NULL")]
		public int ContactoVentaId
		{
			get
			{
				return this._ContactoVentaId;
			}
			set
			{
				if ((this._ContactoVentaId != value))
				{
					if (this._Contacto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContactoVentaIdChanging(value);
					this.SendPropertyChanging();
					this._ContactoVentaId = value;
					this.SendPropertyChanged("ContactoVentaId");
					this.OnContactoVentaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Oportunidad", Storage="_Cliente", ThisKey="ClienteId", OtherKey="ClienteId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Cliente Cliente
		{
			get
			{
				return this._Cliente.Entity;
			}
			set
			{
				Cliente previousValue = this._Cliente.Entity;
				if (((previousValue != value) 
							|| (this._Cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cliente.Entity = null;
						previousValue.Oportunidads.Remove(this);
					}
					this._Cliente.Entity = value;
					if ((value != null))
					{
						value.Oportunidads.Add(this);
						this._ClienteId = value.ClienteId;
					}
					else
					{
						this._ClienteId = default(int);
					}
					this.SendPropertyChanged("Cliente");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contacto_Oportunidad", Storage="_Contacto", ThisKey="ContactoVentaId", OtherKey="ContactoId", IsForeignKey=true)]
		public Contacto Contacto
		{
			get
			{
				return this._Contacto.Entity;
			}
			set
			{
				Contacto previousValue = this._Contacto.Entity;
				if (((previousValue != value) 
							|| (this._Contacto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contacto.Entity = null;
						previousValue.Oportunidads.Remove(this);
					}
					this._Contacto.Entity = value;
					if ((value != null))
					{
						value.Oportunidads.Add(this);
						this._ContactoVentaId = value.ContactoId;
					}
					else
					{
						this._ContactoVentaId = default(int);
					}
					this.SendPropertyChanged("Contacto");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Etapa_Oportunidad", Storage="_Etapa", ThisKey="EtapaId", OtherKey="EtapaId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Etapa Etapa
		{
			get
			{
				return this._Etapa.Entity;
			}
			set
			{
				Etapa previousValue = this._Etapa.Entity;
				if (((previousValue != value) 
							|| (this._Etapa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Etapa.Entity = null;
						previousValue.Oportunidads.Remove(this);
					}
					this._Etapa.Entity = value;
					if ((value != null))
					{
						value.Oportunidads.Add(this);
						this._EtapaId = value.EtapaId;
					}
					else
					{
						this._EtapaId = default(int);
					}
					this.SendPropertyChanged("Etapa");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LineaNegocio_Oportunidad", Storage="_LineaNegocio", ThisKey="LineaNegocioId", OtherKey="LineaNegocioId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public LineaNegocio LineaNegocio
		{
			get
			{
				return this._LineaNegocio.Entity;
			}
			set
			{
				LineaNegocio previousValue = this._LineaNegocio.Entity;
				if (((previousValue != value) 
							|| (this._LineaNegocio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LineaNegocio.Entity = null;
						previousValue.Oportunidads.Remove(this);
					}
					this._LineaNegocio.Entity = value;
					if ((value != null))
					{
						value.Oportunidads.Add(this);
						this._LineaNegocioId = value.LineaNegocioId;
					}
					else
					{
						this._LineaNegocioId = default(int);
					}
					this.SendPropertyChanged("LineaNegocio");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producto_Oportunidad", Storage="_Producto", ThisKey="ProductoId", OtherKey="ProductoId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Producto Producto
		{
			get
			{
				return this._Producto.Entity;
			}
			set
			{
				Producto previousValue = this._Producto.Entity;
				if (((previousValue != value) 
							|| (this._Producto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Producto.Entity = null;
						previousValue.Oportunidads.Remove(this);
					}
					this._Producto.Entity = value;
					if ((value != null))
					{
						value.Oportunidads.Add(this);
						this._ProductoId = value.ProductoId;
					}
					else
					{
						this._ProductoId = default(int);
					}
					this.SendPropertyChanged("Producto");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoGestion_Oportunidad", Storage="_TipoGestion", ThisKey="TipoGestionId", OtherKey="TipoGestionId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TipoGestion TipoGestion
		{
			get
			{
				return this._TipoGestion.Entity;
			}
			set
			{
				TipoGestion previousValue = this._TipoGestion.Entity;
				if (((previousValue != value) 
							|| (this._TipoGestion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoGestion.Entity = null;
						previousValue.Oportunidads.Remove(this);
					}
					this._TipoGestion.Entity = value;
					if ((value != null))
					{
						value.Oportunidads.Add(this);
						this._TipoGestionId = value.TipoGestionId;
					}
					else
					{
						this._TipoGestionId = default(int);
					}
					this.SendPropertyChanged("TipoGestion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vendedor_Oportunidad", Storage="_Vendedor", ThisKey="AsesorId", OtherKey="PerfilId", IsForeignKey=true)]
		public Vendedor Vendedor
		{
			get
			{
				return this._Vendedor.Entity;
			}
			set
			{
				Vendedor previousValue = this._Vendedor.Entity;
				if (((previousValue != value) 
							|| (this._Vendedor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vendedor.Entity = null;
						previousValue.Oportunidads.Remove(this);
					}
					this._Vendedor.Entity = value;
					if ((value != null))
					{
						value.Oportunidads.Add(this);
						this._AsesorId = value.PerfilId;
					}
					else
					{
						this._AsesorId = default(int);
					}
					this.SendPropertyChanged("Vendedor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Perfil")]
	public partial class Perfil : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PerfilId;
		
		private string _ImagenUrl;
		
		private string _Ocupacion;
		
		private EntityRef<Gerencia> _Gerencia;
		
		private EntitySet<User> _Users;
		
		private EntityRef<Vendedor> _Vendedor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPerfilIdChanging(int value);
    partial void OnPerfilIdChanged();
    partial void OnImagenUrlChanging(string value);
    partial void OnImagenUrlChanged();
    partial void OnOcupacionChanging(string value);
    partial void OnOcupacionChanged();
    #endregion
		
		public Perfil()
		{
			this._Gerencia = default(EntityRef<Gerencia>);
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			this._Vendedor = default(EntityRef<Vendedor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PerfilId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PerfilId
		{
			get
			{
				return this._PerfilId;
			}
			set
			{
				if ((this._PerfilId != value))
				{
					this.OnPerfilIdChanging(value);
					this.SendPropertyChanging();
					this._PerfilId = value;
					this.SendPropertyChanged("PerfilId");
					this.OnPerfilIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImagenUrl", DbType="NVarChar(MAX)")]
		public string ImagenUrl
		{
			get
			{
				return this._ImagenUrl;
			}
			set
			{
				if ((this._ImagenUrl != value))
				{
					this.OnImagenUrlChanging(value);
					this.SendPropertyChanging();
					this._ImagenUrl = value;
					this.SendPropertyChanged("ImagenUrl");
					this.OnImagenUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ocupacion", DbType="NVarChar(15)")]
		public string Ocupacion
		{
			get
			{
				return this._Ocupacion;
			}
			set
			{
				if ((this._Ocupacion != value))
				{
					this.OnOcupacionChanging(value);
					this.SendPropertyChanging();
					this._Ocupacion = value;
					this.SendPropertyChanged("Ocupacion");
					this.OnOcupacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Perfil_Gerencia", Storage="_Gerencia", ThisKey="PerfilId", OtherKey="PerfilId", IsUnique=true, IsForeignKey=false)]
		public Gerencia Gerencia
		{
			get
			{
				return this._Gerencia.Entity;
			}
			set
			{
				Gerencia previousValue = this._Gerencia.Entity;
				if (((previousValue != value) 
							|| (this._Gerencia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Gerencia.Entity = null;
						previousValue.Perfil = null;
					}
					this._Gerencia.Entity = value;
					if ((value != null))
					{
						value.Perfil = this;
					}
					this.SendPropertyChanged("Gerencia");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Perfil_User", Storage="_Users", ThisKey="PerfilId", OtherKey="Perfil_PerfilId")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Perfil_Vendedor", Storage="_Vendedor", ThisKey="PerfilId", OtherKey="PerfilId", IsUnique=true, IsForeignKey=false)]
		public Vendedor Vendedor
		{
			get
			{
				return this._Vendedor.Entity;
			}
			set
			{
				Vendedor previousValue = this._Vendedor.Entity;
				if (((previousValue != value) 
							|| (this._Vendedor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vendedor.Entity = null;
						previousValue.Perfil = null;
					}
					this._Vendedor.Entity = value;
					if ((value != null))
					{
						value.Perfil = this;
					}
					this.SendPropertyChanged("Vendedor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Perfil = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Perfil = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Producto")]
	public partial class Producto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductoId;
		
		private string _Nombre;
		
		private EntitySet<Oportunidad> _Oportunidads;
		
		private EntitySet<SenderoProducto> _SenderoProductos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductoIdChanging(int value);
    partial void OnProductoIdChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public Producto()
		{
			this._Oportunidads = new EntitySet<Oportunidad>(new Action<Oportunidad>(this.attach_Oportunidads), new Action<Oportunidad>(this.detach_Oportunidads));
			this._SenderoProductos = new EntitySet<SenderoProducto>(new Action<SenderoProducto>(this.attach_SenderoProductos), new Action<SenderoProducto>(this.detach_SenderoProductos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductoId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProductoId
		{
			get
			{
				return this._ProductoId;
			}
			set
			{
				if ((this._ProductoId != value))
				{
					this.OnProductoIdChanging(value);
					this.SendPropertyChanging();
					this._ProductoId = value;
					this.SendPropertyChanged("ProductoId");
					this.OnProductoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producto_Oportunidad", Storage="_Oportunidads", ThisKey="ProductoId", OtherKey="ProductoId")]
		public EntitySet<Oportunidad> Oportunidads
		{
			get
			{
				return this._Oportunidads;
			}
			set
			{
				this._Oportunidads.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producto_SenderoProducto", Storage="_SenderoProductos", ThisKey="ProductoId", OtherKey="ProductoId")]
		public EntitySet<SenderoProducto> SenderoProductos
		{
			get
			{
				return this._SenderoProductos;
			}
			set
			{
				this._SenderoProductos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Oportunidads(Oportunidad entity)
		{
			this.SendPropertyChanging();
			entity.Producto = this;
		}
		
		private void detach_Oportunidads(Oportunidad entity)
		{
			this.SendPropertyChanging();
			entity.Producto = null;
		}
		
		private void attach_SenderoProductos(SenderoProducto entity)
		{
			this.SendPropertyChanging();
			entity.Producto = this;
		}
		
		private void detach_SenderoProductos(SenderoProducto entity)
		{
			this.SendPropertyChanging();
			entity.Producto = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Provincia")]
	public partial class Provincia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProvinciaId;
		
		private string _Nombre;
		
		private EntitySet<Ciudad> _Ciudads;
		
		private EntitySet<Cliente> _Clientes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProvinciaIdChanging(int value);
    partial void OnProvinciaIdChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public Provincia()
		{
			this._Ciudads = new EntitySet<Ciudad>(new Action<Ciudad>(this.attach_Ciudads), new Action<Ciudad>(this.detach_Ciudads));
			this._Clientes = new EntitySet<Cliente>(new Action<Cliente>(this.attach_Clientes), new Action<Cliente>(this.detach_Clientes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProvinciaId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProvinciaId
		{
			get
			{
				return this._ProvinciaId;
			}
			set
			{
				if ((this._ProvinciaId != value))
				{
					this.OnProvinciaIdChanging(value);
					this.SendPropertyChanging();
					this._ProvinciaId = value;
					this.SendPropertyChanged("ProvinciaId");
					this.OnProvinciaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Provincia_Ciudad", Storage="_Ciudads", ThisKey="ProvinciaId", OtherKey="ProvinciaId")]
		public EntitySet<Ciudad> Ciudads
		{
			get
			{
				return this._Ciudads;
			}
			set
			{
				this._Ciudads.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Provincia_Cliente", Storage="_Clientes", ThisKey="ProvinciaId", OtherKey="ProvinciaId")]
		public EntitySet<Cliente> Clientes
		{
			get
			{
				return this._Clientes;
			}
			set
			{
				this._Clientes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ciudads(Ciudad entity)
		{
			this.SendPropertyChanging();
			entity.Provincia = this;
		}
		
		private void detach_Ciudads(Ciudad entity)
		{
			this.SendPropertyChanging();
			entity.Provincia = null;
		}
		
		private void attach_Clientes(Cliente entity)
		{
			this.SendPropertyChanging();
			entity.Provincia = this;
		}
		
		private void detach_Clientes(Cliente entity)
		{
			this.SendPropertyChanging();
			entity.Provincia = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Role")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoleId;
		
		private string _Name;
		
		private EntitySet<RoleUser> _RoleUsers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Role()
		{
			this._RoleUsers = new EntitySet<RoleUser>(new Action<RoleUser>(this.attach_RoleUsers), new Action<RoleUser>(this.detach_RoleUsers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_RoleUser", Storage="_RoleUsers", ThisKey="RoleId", OtherKey="Role_RoleId")]
		public EntitySet<RoleUser> RoleUsers
		{
			get
			{
				return this._RoleUsers;
			}
			set
			{
				this._RoleUsers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RoleUsers(RoleUser entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_RoleUsers(RoleUser entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RoleUser")]
	public partial class RoleUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Role_RoleId;
		
		private int _User_UserId;
		
		private EntityRef<Role> _Role;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRole_RoleIdChanging(int value);
    partial void OnRole_RoleIdChanged();
    partial void OnUser_UserIdChanging(int value);
    partial void OnUser_UserIdChanged();
    #endregion
		
		public RoleUser()
		{
			this._Role = default(EntityRef<Role>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role_RoleId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Role_RoleId
		{
			get
			{
				return this._Role_RoleId;
			}
			set
			{
				if ((this._Role_RoleId != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRole_RoleIdChanging(value);
					this.SendPropertyChanging();
					this._Role_RoleId = value;
					this.SendPropertyChanged("Role_RoleId");
					this.OnRole_RoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_UserId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int User_UserId
		{
			get
			{
				return this._User_UserId;
			}
			set
			{
				if ((this._User_UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_UserIdChanging(value);
					this.SendPropertyChanging();
					this._User_UserId = value;
					this.SendPropertyChanged("User_UserId");
					this.OnUser_UserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_RoleUser", Storage="_Role", ThisKey="Role_RoleId", OtherKey="RoleId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.RoleUsers.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.RoleUsers.Add(this);
						this._Role_RoleId = value.RoleId;
					}
					else
					{
						this._Role_RoleId = default(int);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_RoleUser", Storage="_User", ThisKey="User_UserId", OtherKey="UserId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.RoleUsers.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.RoleUsers.Add(this);
						this._User_UserId = value.UserId;
					}
					else
					{
						this._User_UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sendero")]
	public partial class Sendero : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SenderoId;
		
		private EntitySet<SenderoProducto> _SenderoProductos;
		
		private EntityRef<Cliente> _Cliente;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSenderoIdChanging(int value);
    partial void OnSenderoIdChanged();
    #endregion
		
		public Sendero()
		{
			this._SenderoProductos = new EntitySet<SenderoProducto>(new Action<SenderoProducto>(this.attach_SenderoProductos), new Action<SenderoProducto>(this.detach_SenderoProductos));
			this._Cliente = default(EntityRef<Cliente>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SenderoId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SenderoId
		{
			get
			{
				return this._SenderoId;
			}
			set
			{
				if ((this._SenderoId != value))
				{
					if (this._Cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSenderoIdChanging(value);
					this.SendPropertyChanging();
					this._SenderoId = value;
					this.SendPropertyChanged("SenderoId");
					this.OnSenderoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sendero_SenderoProducto", Storage="_SenderoProductos", ThisKey="SenderoId", OtherKey="ProductoId")]
		public EntitySet<SenderoProducto> SenderoProductos
		{
			get
			{
				return this._SenderoProductos;
			}
			set
			{
				this._SenderoProductos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Sendero", Storage="_Cliente", ThisKey="SenderoId", OtherKey="ClienteId", IsForeignKey=true)]
		public Cliente Cliente
		{
			get
			{
				return this._Cliente.Entity;
			}
			set
			{
				Cliente previousValue = this._Cliente.Entity;
				if (((previousValue != value) 
							|| (this._Cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cliente.Entity = null;
						previousValue.Sendero = null;
					}
					this._Cliente.Entity = value;
					if ((value != null))
					{
						value.Sendero = this;
						this._SenderoId = value.ClienteId;
					}
					else
					{
						this._SenderoId = default(int);
					}
					this.SendPropertyChanged("Cliente");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SenderoProductos(SenderoProducto entity)
		{
			this.SendPropertyChanging();
			entity.Sendero = this;
		}
		
		private void detach_SenderoProductos(SenderoProducto entity)
		{
			this.SendPropertyChanging();
			entity.Sendero = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SenderoProducto")]
	public partial class SenderoProducto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SenderoId;
		
		private int _ProductoId;
		
		private EntityRef<Producto> _Producto;
		
		private EntityRef<Sendero> _Sendero;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSenderoIdChanging(int value);
    partial void OnSenderoIdChanged();
    partial void OnProductoIdChanging(int value);
    partial void OnProductoIdChanged();
    #endregion
		
		public SenderoProducto()
		{
			this._Producto = default(EntityRef<Producto>);
			this._Sendero = default(EntityRef<Sendero>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SenderoId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SenderoId
		{
			get
			{
				return this._SenderoId;
			}
			set
			{
				if ((this._SenderoId != value))
				{
					this.OnSenderoIdChanging(value);
					this.SendPropertyChanging();
					this._SenderoId = value;
					this.SendPropertyChanged("SenderoId");
					this.OnSenderoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductoId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProductoId
		{
			get
			{
				return this._ProductoId;
			}
			set
			{
				if ((this._ProductoId != value))
				{
					if ((this._Producto.HasLoadedOrAssignedValue || this._Sendero.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductoIdChanging(value);
					this.SendPropertyChanging();
					this._ProductoId = value;
					this.SendPropertyChanged("ProductoId");
					this.OnProductoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producto_SenderoProducto", Storage="_Producto", ThisKey="ProductoId", OtherKey="ProductoId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Producto Producto
		{
			get
			{
				return this._Producto.Entity;
			}
			set
			{
				Producto previousValue = this._Producto.Entity;
				if (((previousValue != value) 
							|| (this._Producto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Producto.Entity = null;
						previousValue.SenderoProductos.Remove(this);
					}
					this._Producto.Entity = value;
					if ((value != null))
					{
						value.SenderoProductos.Add(this);
						this._ProductoId = value.ProductoId;
					}
					else
					{
						this._ProductoId = default(int);
					}
					this.SendPropertyChanged("Producto");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sendero_SenderoProducto", Storage="_Sendero", ThisKey="ProductoId", OtherKey="SenderoId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Sendero Sendero
		{
			get
			{
				return this._Sendero.Entity;
			}
			set
			{
				Sendero previousValue = this._Sendero.Entity;
				if (((previousValue != value) 
							|| (this._Sendero.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sendero.Entity = null;
						previousValue.SenderoProductos.Remove(this);
					}
					this._Sendero.Entity = value;
					if ((value != null))
					{
						value.SenderoProductos.Add(this);
						this._ProductoId = value.SenderoId;
					}
					else
					{
						this._ProductoId = default(int);
					}
					this.SendPropertyChanged("Sendero");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tarea")]
	public partial class Tarea : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TareaId;
		
		private int _CreadoPorId;
		
		private int _AsignadoAId;
		
		private System.DateTime _Fecha;
		
		private string _Descripcion;
		
		private int _TareaEstado;
		
		private System.DateTime _FechaCumplimiento;
		
		private string _Identificador;
		
		private int _Prioridad;
		
		private int _TareaTipo;
		
		private System.DateTime _ProximaTarea;
		
		private int _ClienteId;
		
		private EntitySet<TareaHistorial> _TareaHistorials;
		
		private EntityRef<Cliente> _Cliente;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTareaIdChanging(int value);
    partial void OnTareaIdChanged();
    partial void OnCreadoPorIdChanging(int value);
    partial void OnCreadoPorIdChanged();
    partial void OnAsignadoAIdChanging(int value);
    partial void OnAsignadoAIdChanged();
    partial void OnFechaChanging(System.DateTime value);
    partial void OnFechaChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnTareaEstadoChanging(int value);
    partial void OnTareaEstadoChanged();
    partial void OnFechaCumplimientoChanging(System.DateTime value);
    partial void OnFechaCumplimientoChanged();
    partial void OnIdentificadorChanging(string value);
    partial void OnIdentificadorChanged();
    partial void OnPrioridadChanging(int value);
    partial void OnPrioridadChanged();
    partial void OnTareaTipoChanging(int value);
    partial void OnTareaTipoChanged();
    partial void OnProximaTareaChanging(System.DateTime value);
    partial void OnProximaTareaChanged();
    partial void OnClienteIdChanging(int value);
    partial void OnClienteIdChanged();
    #endregion
		
		public Tarea()
		{
			this._TareaHistorials = new EntitySet<TareaHistorial>(new Action<TareaHistorial>(this.attach_TareaHistorials), new Action<TareaHistorial>(this.detach_TareaHistorials));
			this._Cliente = default(EntityRef<Cliente>);
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TareaId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TareaId
		{
			get
			{
				return this._TareaId;
			}
			set
			{
				if ((this._TareaId != value))
				{
					this.OnTareaIdChanging(value);
					this.SendPropertyChanging();
					this._TareaId = value;
					this.SendPropertyChanged("TareaId");
					this.OnTareaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreadoPorId", DbType="Int NOT NULL")]
		public int CreadoPorId
		{
			get
			{
				return this._CreadoPorId;
			}
			set
			{
				if ((this._CreadoPorId != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreadoPorIdChanging(value);
					this.SendPropertyChanging();
					this._CreadoPorId = value;
					this.SendPropertyChanged("CreadoPorId");
					this.OnCreadoPorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AsignadoAId", DbType="Int NOT NULL")]
		public int AsignadoAId
		{
			get
			{
				return this._AsignadoAId;
			}
			set
			{
				if ((this._AsignadoAId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAsignadoAIdChanging(value);
					this.SendPropertyChanging();
					this._AsignadoAId = value;
					this.SendPropertyChanged("AsignadoAId");
					this.OnAsignadoAIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="DateTime NOT NULL")]
		public System.DateTime Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="NVarChar(255)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TareaEstado", DbType="Int NOT NULL")]
		public int TareaEstado
		{
			get
			{
				return this._TareaEstado;
			}
			set
			{
				if ((this._TareaEstado != value))
				{
					this.OnTareaEstadoChanging(value);
					this.SendPropertyChanging();
					this._TareaEstado = value;
					this.SendPropertyChanged("TareaEstado");
					this.OnTareaEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaCumplimiento", DbType="DateTime NOT NULL")]
		public System.DateTime FechaCumplimiento
		{
			get
			{
				return this._FechaCumplimiento;
			}
			set
			{
				if ((this._FechaCumplimiento != value))
				{
					this.OnFechaCumplimientoChanging(value);
					this.SendPropertyChanging();
					this._FechaCumplimiento = value;
					this.SendPropertyChanged("FechaCumplimiento");
					this.OnFechaCumplimientoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Identificador", DbType="NVarChar(20)")]
		public string Identificador
		{
			get
			{
				return this._Identificador;
			}
			set
			{
				if ((this._Identificador != value))
				{
					this.OnIdentificadorChanging(value);
					this.SendPropertyChanging();
					this._Identificador = value;
					this.SendPropertyChanged("Identificador");
					this.OnIdentificadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prioridad", DbType="Int NOT NULL")]
		public int Prioridad
		{
			get
			{
				return this._Prioridad;
			}
			set
			{
				if ((this._Prioridad != value))
				{
					this.OnPrioridadChanging(value);
					this.SendPropertyChanging();
					this._Prioridad = value;
					this.SendPropertyChanged("Prioridad");
					this.OnPrioridadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TareaTipo", DbType="Int NOT NULL")]
		public int TareaTipo
		{
			get
			{
				return this._TareaTipo;
			}
			set
			{
				if ((this._TareaTipo != value))
				{
					this.OnTareaTipoChanging(value);
					this.SendPropertyChanging();
					this._TareaTipo = value;
					this.SendPropertyChanged("TareaTipo");
					this.OnTareaTipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProximaTarea", DbType="DateTime NOT NULL")]
		public System.DateTime ProximaTarea
		{
			get
			{
				return this._ProximaTarea;
			}
			set
			{
				if ((this._ProximaTarea != value))
				{
					this.OnProximaTareaChanging(value);
					this.SendPropertyChanging();
					this._ProximaTarea = value;
					this.SendPropertyChanged("ProximaTarea");
					this.OnProximaTareaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClienteId", DbType="Int NOT NULL")]
		public int ClienteId
		{
			get
			{
				return this._ClienteId;
			}
			set
			{
				if ((this._ClienteId != value))
				{
					if (this._Cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClienteIdChanging(value);
					this.SendPropertyChanging();
					this._ClienteId = value;
					this.SendPropertyChanged("ClienteId");
					this.OnClienteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tarea_TareaHistorial", Storage="_TareaHistorials", ThisKey="TareaId", OtherKey="TareaId")]
		public EntitySet<TareaHistorial> TareaHistorials
		{
			get
			{
				return this._TareaHistorials;
			}
			set
			{
				this._TareaHistorials.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Tarea", Storage="_Cliente", ThisKey="ClienteId", OtherKey="ClienteId", IsForeignKey=true)]
		public Cliente Cliente
		{
			get
			{
				return this._Cliente.Entity;
			}
			set
			{
				Cliente previousValue = this._Cliente.Entity;
				if (((previousValue != value) 
							|| (this._Cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cliente.Entity = null;
						previousValue.Tareas.Remove(this);
					}
					this._Cliente.Entity = value;
					if ((value != null))
					{
						value.Tareas.Add(this);
						this._ClienteId = value.ClienteId;
					}
					else
					{
						this._ClienteId = default(int);
					}
					this.SendPropertyChanged("Cliente");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Tarea", Storage="_User", ThisKey="AsignadoAId", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Tareas.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Tareas.Add(this);
						this._AsignadoAId = value.UserId;
					}
					else
					{
						this._AsignadoAId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Tarea1", Storage="_User1", ThisKey="CreadoPorId", OtherKey="UserId", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.Tareas1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.Tareas1.Add(this);
						this._CreadoPorId = value.UserId;
					}
					else
					{
						this._CreadoPorId = default(int);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TareaHistorials(TareaHistorial entity)
		{
			this.SendPropertyChanging();
			entity.Tarea = this;
		}
		
		private void detach_TareaHistorials(TareaHistorial entity)
		{
			this.SendPropertyChanging();
			entity.Tarea = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TareaHistorial")]
	public partial class TareaHistorial : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TareaHistorialId;
		
		private int _TareaId;
		
		private string _Descripcion;
		
		private System.DateTime _Fecha;
		
		private int _TareaEstado;
		
		private EntityRef<Tarea> _Tarea;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTareaHistorialIdChanging(int value);
    partial void OnTareaHistorialIdChanged();
    partial void OnTareaIdChanging(int value);
    partial void OnTareaIdChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnFechaChanging(System.DateTime value);
    partial void OnFechaChanged();
    partial void OnTareaEstadoChanging(int value);
    partial void OnTareaEstadoChanged();
    #endregion
		
		public TareaHistorial()
		{
			this._Tarea = default(EntityRef<Tarea>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TareaHistorialId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TareaHistorialId
		{
			get
			{
				return this._TareaHistorialId;
			}
			set
			{
				if ((this._TareaHistorialId != value))
				{
					this.OnTareaHistorialIdChanging(value);
					this.SendPropertyChanging();
					this._TareaHistorialId = value;
					this.SendPropertyChanged("TareaHistorialId");
					this.OnTareaHistorialIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TareaId", DbType="Int NOT NULL")]
		public int TareaId
		{
			get
			{
				return this._TareaId;
			}
			set
			{
				if ((this._TareaId != value))
				{
					if (this._Tarea.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTareaIdChanging(value);
					this.SendPropertyChanging();
					this._TareaId = value;
					this.SendPropertyChanged("TareaId");
					this.OnTareaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="DateTime NOT NULL")]
		public System.DateTime Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TareaEstado", DbType="Int NOT NULL")]
		public int TareaEstado
		{
			get
			{
				return this._TareaEstado;
			}
			set
			{
				if ((this._TareaEstado != value))
				{
					this.OnTareaEstadoChanging(value);
					this.SendPropertyChanging();
					this._TareaEstado = value;
					this.SendPropertyChanged("TareaEstado");
					this.OnTareaEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tarea_TareaHistorial", Storage="_Tarea", ThisKey="TareaId", OtherKey="TareaId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Tarea Tarea
		{
			get
			{
				return this._Tarea.Entity;
			}
			set
			{
				Tarea previousValue = this._Tarea.Entity;
				if (((previousValue != value) 
							|| (this._Tarea.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tarea.Entity = null;
						previousValue.TareaHistorials.Remove(this);
					}
					this._Tarea.Entity = value;
					if ((value != null))
					{
						value.TareaHistorials.Add(this);
						this._TareaId = value.TareaId;
					}
					else
					{
						this._TareaId = default(int);
					}
					this.SendPropertyChanged("Tarea");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipoGestion")]
	public partial class TipoGestion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TipoGestionId;
		
		private string _Descripcion;
		
		private EntitySet<Oportunidad> _Oportunidads;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTipoGestionIdChanging(int value);
    partial void OnTipoGestionIdChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public TipoGestion()
		{
			this._Oportunidads = new EntitySet<Oportunidad>(new Action<Oportunidad>(this.attach_Oportunidads), new Action<Oportunidad>(this.detach_Oportunidads));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipoGestionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TipoGestionId
		{
			get
			{
				return this._TipoGestionId;
			}
			set
			{
				if ((this._TipoGestionId != value))
				{
					this.OnTipoGestionIdChanging(value);
					this.SendPropertyChanging();
					this._TipoGestionId = value;
					this.SendPropertyChanged("TipoGestionId");
					this.OnTipoGestionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoGestion_Oportunidad", Storage="_Oportunidads", ThisKey="TipoGestionId", OtherKey="TipoGestionId")]
		public EntitySet<Oportunidad> Oportunidads
		{
			get
			{
				return this._Oportunidads;
			}
			set
			{
				this._Oportunidads.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Oportunidads(Oportunidad entity)
		{
			this.SendPropertyChanging();
			entity.TipoGestion = this;
		}
		
		private void detach_Oportunidads(Oportunidad entity)
		{
			this.SendPropertyChanging();
			entity.TipoGestion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TomaDescicion")]
	public partial class TomaDescicion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TomaDescicionId;
		
		private string _Nombre;
		
		private string _Cargo;
		
		private string _Celular;
		
		private EntityRef<Cliente> _Cliente;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTomaDescicionIdChanging(int value);
    partial void OnTomaDescicionIdChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnCargoChanging(string value);
    partial void OnCargoChanged();
    partial void OnCelularChanging(string value);
    partial void OnCelularChanged();
    #endregion
		
		public TomaDescicion()
		{
			this._Cliente = default(EntityRef<Cliente>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TomaDescicionId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TomaDescicionId
		{
			get
			{
				return this._TomaDescicionId;
			}
			set
			{
				if ((this._TomaDescicionId != value))
				{
					if (this._Cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTomaDescicionIdChanging(value);
					this.SendPropertyChanging();
					this._TomaDescicionId = value;
					this.SendPropertyChanged("TomaDescicionId");
					this.OnTomaDescicionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cargo", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Cargo
		{
			get
			{
				return this._Cargo;
			}
			set
			{
				if ((this._Cargo != value))
				{
					this.OnCargoChanging(value);
					this.SendPropertyChanging();
					this._Cargo = value;
					this.SendPropertyChanged("Cargo");
					this.OnCargoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Celular", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string Celular
		{
			get
			{
				return this._Celular;
			}
			set
			{
				if ((this._Celular != value))
				{
					this.OnCelularChanging(value);
					this.SendPropertyChanging();
					this._Celular = value;
					this.SendPropertyChanged("Celular");
					this.OnCelularChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_TomaDescicion", Storage="_Cliente", ThisKey="TomaDescicionId", OtherKey="ClienteId", IsForeignKey=true)]
		public Cliente Cliente
		{
			get
			{
				return this._Cliente.Entity;
			}
			set
			{
				Cliente previousValue = this._Cliente.Entity;
				if (((previousValue != value) 
							|| (this._Cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cliente.Entity = null;
						previousValue.TomaDescicion = null;
					}
					this._Cliente.Entity = value;
					if ((value != null))
					{
						value.TomaDescicion = this;
						this._TomaDescicionId = value.ClienteId;
					}
					else
					{
						this._TomaDescicionId = default(int);
					}
					this.SendPropertyChanged("Cliente");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private string _UserName;
		
		private string _PasswordHash;
		
		private string _SecurityStamp;
		
		private System.Nullable<int> _Perfil_PerfilId;
		
		private string _Nombre;
		
		private string _Apellidos;
		
		private string _Email;
		
		private string _Celular;
		
		private EntitySet<Claim> _Claims;
		
		private EntitySet<Cliente> _Clientes;
		
		private EntitySet<ExternalLogin> _ExternalLogins;
		
		private EntitySet<RoleUser> _RoleUsers;
		
		private EntitySet<Tarea> _Tareas;
		
		private EntitySet<Tarea> _Tareas1;
		
		private EntityRef<Perfil> _Perfil;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordHashChanging(string value);
    partial void OnPasswordHashChanged();
    partial void OnSecurityStampChanging(string value);
    partial void OnSecurityStampChanged();
    partial void OnPerfil_PerfilIdChanging(System.Nullable<int> value);
    partial void OnPerfil_PerfilIdChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnApellidosChanging(string value);
    partial void OnApellidosChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCelularChanging(string value);
    partial void OnCelularChanged();
    #endregion
		
		public User()
		{
			this._Claims = new EntitySet<Claim>(new Action<Claim>(this.attach_Claims), new Action<Claim>(this.detach_Claims));
			this._Clientes = new EntitySet<Cliente>(new Action<Cliente>(this.attach_Clientes), new Action<Cliente>(this.detach_Clientes));
			this._ExternalLogins = new EntitySet<ExternalLogin>(new Action<ExternalLogin>(this.attach_ExternalLogins), new Action<ExternalLogin>(this.detach_ExternalLogins));
			this._RoleUsers = new EntitySet<RoleUser>(new Action<RoleUser>(this.attach_RoleUsers), new Action<RoleUser>(this.detach_RoleUsers));
			this._Tareas = new EntitySet<Tarea>(new Action<Tarea>(this.attach_Tareas), new Action<Tarea>(this.detach_Tareas));
			this._Tareas1 = new EntitySet<Tarea>(new Action<Tarea>(this.attach_Tareas1), new Action<Tarea>(this.detach_Tareas1));
			this._Perfil = default(EntityRef<Perfil>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordHash", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string PasswordHash
		{
			get
			{
				return this._PasswordHash;
			}
			set
			{
				if ((this._PasswordHash != value))
				{
					this.OnPasswordHashChanging(value);
					this.SendPropertyChanging();
					this._PasswordHash = value;
					this.SendPropertyChanged("PasswordHash");
					this.OnPasswordHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityStamp", DbType="NVarChar(MAX)")]
		public string SecurityStamp
		{
			get
			{
				return this._SecurityStamp;
			}
			set
			{
				if ((this._SecurityStamp != value))
				{
					this.OnSecurityStampChanging(value);
					this.SendPropertyChanging();
					this._SecurityStamp = value;
					this.SendPropertyChanged("SecurityStamp");
					this.OnSecurityStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Perfil_PerfilId", DbType="Int")]
		public System.Nullable<int> Perfil_PerfilId
		{
			get
			{
				return this._Perfil_PerfilId;
			}
			set
			{
				if ((this._Perfil_PerfilId != value))
				{
					if (this._Perfil.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPerfil_PerfilIdChanging(value);
					this.SendPropertyChanging();
					this._Perfil_PerfilId = value;
					this.SendPropertyChanged("Perfil_PerfilId");
					this.OnPerfil_PerfilIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellidos", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string Apellidos
		{
			get
			{
				return this._Apellidos;
			}
			set
			{
				if ((this._Apellidos != value))
				{
					this.OnApellidosChanging(value);
					this.SendPropertyChanging();
					this._Apellidos = value;
					this.SendPropertyChanged("Apellidos");
					this.OnApellidosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Celular", DbType="NVarChar(15)")]
		public string Celular
		{
			get
			{
				return this._Celular;
			}
			set
			{
				if ((this._Celular != value))
				{
					this.OnCelularChanging(value);
					this.SendPropertyChanging();
					this._Celular = value;
					this.SendPropertyChanged("Celular");
					this.OnCelularChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Claim", Storage="_Claims", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<Claim> Claims
		{
			get
			{
				return this._Claims;
			}
			set
			{
				this._Claims.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Cliente", Storage="_Clientes", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<Cliente> Clientes
		{
			get
			{
				return this._Clientes;
			}
			set
			{
				this._Clientes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ExternalLogin", Storage="_ExternalLogins", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<ExternalLogin> ExternalLogins
		{
			get
			{
				return this._ExternalLogins;
			}
			set
			{
				this._ExternalLogins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_RoleUser", Storage="_RoleUsers", ThisKey="UserId", OtherKey="User_UserId")]
		public EntitySet<RoleUser> RoleUsers
		{
			get
			{
				return this._RoleUsers;
			}
			set
			{
				this._RoleUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Tarea", Storage="_Tareas", ThisKey="UserId", OtherKey="AsignadoAId")]
		public EntitySet<Tarea> Tareas
		{
			get
			{
				return this._Tareas;
			}
			set
			{
				this._Tareas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Tarea1", Storage="_Tareas1", ThisKey="UserId", OtherKey="CreadoPorId")]
		public EntitySet<Tarea> Tareas1
		{
			get
			{
				return this._Tareas1;
			}
			set
			{
				this._Tareas1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Perfil_User", Storage="_Perfil", ThisKey="Perfil_PerfilId", OtherKey="PerfilId", IsForeignKey=true)]
		public Perfil Perfil
		{
			get
			{
				return this._Perfil.Entity;
			}
			set
			{
				Perfil previousValue = this._Perfil.Entity;
				if (((previousValue != value) 
							|| (this._Perfil.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Perfil.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._Perfil.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._Perfil_PerfilId = value.PerfilId;
					}
					else
					{
						this._Perfil_PerfilId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Perfil");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Claims(Claim entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Claims(Claim entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Clientes(Cliente entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Clientes(Cliente entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_ExternalLogins(ExternalLogin entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_ExternalLogins(ExternalLogin entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_RoleUsers(RoleUser entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_RoleUsers(RoleUser entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Tareas(Tarea entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Tareas(Tarea entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Tareas1(Tarea entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_Tareas1(Tarea entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vendedor")]
	public partial class Vendedor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PerfilId;
		
		private decimal _PresuspuestoAsignado;
		
		private EntitySet<Cliente> _Clientes;
		
		private EntitySet<Oportunidad> _Oportunidads;
		
		private EntityRef<Perfil> _Perfil;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPerfilIdChanging(int value);
    partial void OnPerfilIdChanged();
    partial void OnPresuspuestoAsignadoChanging(decimal value);
    partial void OnPresuspuestoAsignadoChanged();
    #endregion
		
		public Vendedor()
		{
			this._Clientes = new EntitySet<Cliente>(new Action<Cliente>(this.attach_Clientes), new Action<Cliente>(this.detach_Clientes));
			this._Oportunidads = new EntitySet<Oportunidad>(new Action<Oportunidad>(this.attach_Oportunidads), new Action<Oportunidad>(this.detach_Oportunidads));
			this._Perfil = default(EntityRef<Perfil>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PerfilId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PerfilId
		{
			get
			{
				return this._PerfilId;
			}
			set
			{
				if ((this._PerfilId != value))
				{
					if (this._Perfil.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPerfilIdChanging(value);
					this.SendPropertyChanging();
					this._PerfilId = value;
					this.SendPropertyChanged("PerfilId");
					this.OnPerfilIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PresuspuestoAsignado", DbType="Decimal(18,2) NOT NULL")]
		public decimal PresuspuestoAsignado
		{
			get
			{
				return this._PresuspuestoAsignado;
			}
			set
			{
				if ((this._PresuspuestoAsignado != value))
				{
					this.OnPresuspuestoAsignadoChanging(value);
					this.SendPropertyChanging();
					this._PresuspuestoAsignado = value;
					this.SendPropertyChanged("PresuspuestoAsignado");
					this.OnPresuspuestoAsignadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vendedor_Cliente", Storage="_Clientes", ThisKey="PerfilId", OtherKey="Vendedor_PerfilId")]
		public EntitySet<Cliente> Clientes
		{
			get
			{
				return this._Clientes;
			}
			set
			{
				this._Clientes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vendedor_Oportunidad", Storage="_Oportunidads", ThisKey="PerfilId", OtherKey="AsesorId")]
		public EntitySet<Oportunidad> Oportunidads
		{
			get
			{
				return this._Oportunidads;
			}
			set
			{
				this._Oportunidads.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Perfil_Vendedor", Storage="_Perfil", ThisKey="PerfilId", OtherKey="PerfilId", IsForeignKey=true)]
		public Perfil Perfil
		{
			get
			{
				return this._Perfil.Entity;
			}
			set
			{
				Perfil previousValue = this._Perfil.Entity;
				if (((previousValue != value) 
							|| (this._Perfil.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Perfil.Entity = null;
						previousValue.Vendedor = null;
					}
					this._Perfil.Entity = value;
					if ((value != null))
					{
						value.Vendedor = this;
						this._PerfilId = value.PerfilId;
					}
					else
					{
						this._PerfilId = default(int);
					}
					this.SendPropertyChanged("Perfil");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Clientes(Cliente entity)
		{
			this.SendPropertyChanging();
			entity.Vendedor = this;
		}
		
		private void detach_Clientes(Cliente entity)
		{
			this.SendPropertyChanging();
			entity.Vendedor = null;
		}
		
		private void attach_Oportunidads(Oportunidad entity)
		{
			this.SendPropertyChanging();
			entity.Vendedor = this;
		}
		
		private void detach_Oportunidads(Oportunidad entity)
		{
			this.SendPropertyChanging();
			entity.Vendedor = null;
		}
	}
}
#pragma warning restore 1591
